openapi: "3.0.3"
info:
  version: "1.0.0"
  title: "Alto MakeApi"
servers:
  - url: http://localhost/api/v1
tags:
  - name: iblock
    description: Получение данных инфоблока
  - name: page
    description: Получение данных для страницы
paths:
  /iblock/{iblock_code}:
    get:
      tags:
        - iblock
      description: Получить информацию об инфоблоке
      parameters:
        - name: iblock_code
          in: path
          description: Код инфоблока
          required: true
          schema:
            type: string
      responses:
        200:
          description: Успешный запрос
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IblockResponse'
        404:
          description: Инфоблок не найден
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
  /iblock/{iblock_code}/elements:
    get:
      tags:
        - iblock
      description: Получить список элементов инфоблока
      parameters:
        - name: iblock_code
          in: path
          description: Код инфоблока
          required: true
          schema:
            type: string
        - name: limit
          in: query
          description: Количество элементов на странице
          required: false
          schema:
            type: integer
        - name: page
          in: query
          description: Номер страницы
          required: false
          schema:
            type: integer
        - name: sort
          in: query
          description: Поле для сортировки
          required: false
          schema:
            type: string
        - name: order
          in: query
          description: Направление сортировки
          required: false
          schema:
            type: string
        - name: filter
          in: query
          description: Фильтр для элементов инфоблока
          required: false
          example: filter[ID]=1, filter[>ID]=2, filter[ID]=1,2,3
          style: deepObject
          explode: true
          schema:
            type: object
      responses:
        200:
          description: Успешный запрос
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IblockElementsResponse'
  /iblock/{iblock_code}/element:
    get:
      tags:
        - iblock
      description: Получить информацию об элементе
      parameters:
        - name: iblock_code
          in: path
          description: Код инфоблока
          required: true
          schema:
            type: string
        - name: element_id
          in: query
          description: ID элемента (обязательно, если `element_code` не указан)
          required: false
          schema:
            type: string
        - name: element_code
          in: query
          description: Символьный код элемента (обязательно, если `element_id` не указан)
          required: false
          schema:
            type: string
      responses:
        200:
          description: Успешный запрос
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IblockElementResponse'
        404:
          description: Элемент не найден
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'

  /iblock/{iblock_code}/sections:
    get:
      tags:
        - iblock
      summary: Получить список разделов инфоблока
      parameters:
        - name: iblock_code
          in: path
          description: Код инфоблока
          required: true
          schema:
            type: string
        - name: limit
          in: query
          description: Количество разделов на страницу
          required: false
          schema:
            type: integer
        - name: page
          in: query
          description: Номер страницы
          required: false
          schema:
            type: integer
        - name: sort
          in: query
          description: Поле для сортировки
          required: false
          schema:
            type: string
        - name: order
          in: query
          description: Направление сортировки
          required: false
          schema:
            type: string
      responses:
        200:
          description: Успешный запрос
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IblockSectionsResponse'
  /iblock/{iblock_code}/section:
    get:
      tags:
        - iblock
      summary: Получить информацию о разделе инфоблока
      parameters:
        - name: iblock_code
          in: path
          description: Код инфоблока
          required: true
          schema:
            type: string
        - name: section_id
          in: query
          description: ID раздела инфоблока (обязательно, если `section_code` не указан)
          required: false
          schema:
            type: string
        - name: section_code
          in: query
          description: Символьный код раздела инфоблока (обязательно, если `section_id` не указан)
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Успешный запрос
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IblockSectionResponse'
        404:
          description: Раздел не найден
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
  /content:
    get:
      tags:
        - page
      summary: Получить контент области на странице
      parameters:
        - name: page
          in: query
          description: URL-страницы
          required: true
          schema:
            type: string
        - name: site
          in: query
          description: ID сайта
          schema:
            type: string
      responses:
        200:
          description: Успешный запрос
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContentListResponseSuccess'
        400:
          description: Некорректный запрос
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        404:
          description: Контент не найден
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
  /content/{code}:
    get:
      tags:
        - page
      summary: Получить контент области
      parameters:
        - name: code
          in: path
          description: Код контент области
          required: true
          schema:
            type: string
        - name: site
          in: query
          description: ID сайта
          schema:
            type: string
      responses:
        200:
          description: Успешный запрос
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContentResponseSuccess'
        400:
          description: Некорректный запрос
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        404:
          description: Контент не найден
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
  /meta:
    get:
      tags:
        - page
      summary: Получить meta-данные для страницы
      parameters:
        - name: page
          in: query
          description: URL-страницы (без домена)
          required: true
          schema:
            type: string
        - name: site
          in: query
          description: ID сайта
          schema:
            type: string
      responses:
        200:
          description: Успешный запрос
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetaResponseSuccess'
        400:
          description: Некорректный запрос
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'

components:
  schemas:
    ResponseError:
      type: object
      properties:
        status:
          type: string
          default: error
        data:
          type: object
          nullable: true
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ErrorItem'
    ErrorItem:
      type: object
      properties:
        code:
          type: string
        message:
          type: string
    Pagination:
      type: object
      properties:
        page:
          type: integer
          description: Номер текущей страницы
        total_page:
          type: integer
          description: Кол-во всех страниц
        limit:
          type: integer
          description: Кол-во элементов на страницу
        count_items:
          type: integer
          description: Кол-во всех элементов
    Image:
      type: object
      properties:
        id:
          type: integer
          description: ID Изображения
        url:
          type: array
          items:
            type: object
            properties:
              desktop:
                type: string
                description: URL для ПК версии
              mobile:
                type: string
                description: URL для мобильной версии
          description: URL Изображения
        alt:
          type: string
          description: Название изображения
        type:
          type: string
          description: Тип файла, image / file
    File:
      type: object
      properties:
        id:
          type: integer
          description: ID Файла
        url:
          type: string
          description: URL
        name:
          type: string
          description: Название файла
        alt:
          type: string
          description: Описание
        type:
          type: string
          description: Тип файла, image / file
    Text:
      type: object
      properties:
        type:
          type: string
          description: Тип текста
        text:
          type: string
          description: Текст
    User:
      type: object
      description: Данные пользователя
      properties:
        id:
          type: integer
          description: ID
        active:
          type: boolean
          description: Активность
        name:
          type: string
          description: Имя
        second_name:
          type: string
          description: Отчество
        last_name:
          type: string
          description: Фамилия
        xml_id:
          type: string
          description: Внешний ID
    Meta:
      type: object
      properties:
        title:
          type: string
          description: Заголовок страницы
        description: 
          type: string
          description: Описание страницы
        robots: 
          type: string
          description: Мета-тег robost
        canonical:
          type: string
          description: Каноническая ссылка
          
    ContentListResponseSuccess:
      type: object
      properties:
        status:
          type: string
          default: success
        data:
          type: array
          items:
            $ref: '#/components/schemas/ContentItem'
    ContentResponseSuccess:
      type: object
      properties:
        status:
          type: string
          default: success
        data:
          $ref: '#/components/schemas/ContentItem'
    ContentItem:
      type: object
      properties:
        page:
          type: string
          description: Код страницы
        code:
          type: string
          description: Код контент-области
        content:
          type: string
          description: Вставляемый контент
        type:
          type: string
          description: Тип контента, [text, html, image]
          enum:
            - text
            - html
            - image
        sort:
          type: integer
          description: Сортировка
    MetaResponseSuccess:
      type: object
      properties:
        status:
          type: string
          default: success
        data:
          $ref: '#/components/schemas/Meta'
          
    IblockResponse:
      type: object
      properties:
        status:
          type: string
          default: success
        data:
          type: object
          properties:
            id:
              type: integer
              example: 2
            api_code:
              type: string
              example: News
            version:
              type: string
              example: "1"
            timestamp:
              type: string
              format: date-time
              example: "2024-04-15T08:23:19+03:00"
            iblock_type_id:
              type: string
              example: content
            site_id:
              type: string
              example: s1
            code:
              type: string
              example: news
            name:
              type: string
              example: "Новости"
            active:
              type: boolean
              example: true
            sort:
              type: integer
              example: 500
            list_page_url:
              type: string
              example: "#SITE_DIR#/news/"
            detail_page_url:
              type: string
              example: "#SITE_DIR#/news/#SECTION_ID#/#ID#/"
            section_page_url:
              type: string
              example: "#SITE_DIR#/news/#ID#/"
            canonical_page_url:
              type: string
            description:
              type: string
            properties:
              type: array
              items:
                anyOf:
                  - $ref: '#/components/schemas/PropertyInfo'
                  - $ref: '#/components/schemas/PropertyListInfo'
                  - $ref: '#/components/schemas/PropertyDirectoryInfo'
    PropertyInfo:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: "Свойство типа Файл или Строка"
        code:
          type: string
          example: "PROPERTY_CODE"
        active:
          type: boolean
          example: true
        required:
          type: boolean
          example: false
        multiple:
          type: boolean
          example: true
        type:
          type: string
          example: "F"
    PropertyListInfo:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: "Свойство типа Список"
        code:
          type: string
          example: "PROPERTY_CODE"
        active:
          type: boolean
          example: true
        required:
          type: boolean
          example: false
        multiple:
          type: boolean
          example: true
        type:
          type: string
          example: "L"
        items:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
                description: ID значения свойства
              value:
                type: string
                description: Значение
              default:
                type: boolean
                description: Является ли значением по умолчанию
              sort:
                type: integer
                description: Сортировка
              xml_id:
                type: string
                description: Код значения
    PropertyDirectoryInfo:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: "Свойство типа Справочник"
        code:
          type: string
          example: "PROPERTY_CODE"
        active:
          type: boolean
          example: true
        required:
          type: boolean
          example: false
        multiple:
          type: boolean
          example: true
        type:
          type: string
          example: "S"
        items:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
                description: ID значения свойства
              name:
                type: string
                description: Название
              sort:
                type: integer
                description: Сортировка
              xml_id:
                type: string
                description: Код значения
              link:
                type: string
                description: Ссылка
              description:
                type: string
                description: Описание
              full_description:
                type: string
                description: Полное описание
              default:
                type: boolean
                description: Является ли значением по умолчанию
              file:
                anyOf:
                  - $ref: '#/components/schemas/File'
                  - $ref: '#/components/schemas/Image'
    PropertyValue:
      type: string
      description: Значение свойства типа Строка
    PropertyElementValue:
      type: object
      description: Значение свойства типа Привязка к элементу
      properties:
        id:
          type: integer
          description: ID
        name:
          type: string
          description: Название
        code:
          type: string
          description: Символьный код
    PropertyListValue:
      type: object
      description: Значение свойства типа Список
      properties:
        id:
          type: integer
          description: ID
        value:
          type: string
          description: Значение
        xml_id:
          type: string
          description: Символьный код
    PropertyDirectoryValue:
      type: object
      description: Значение свойства типа Справочник
      properties:
        id:
          type: integer
          description: ID
        name:
          type: string
          description: Название
        xml_id:
          type: string
          description: Символьный код
        description:
          type: string
          description: Краткое описание
        full_description:
          type: string
          description: Полное описание
        file:
          description: Файл
          oneOf:
            - $ref: '#/components/schemas/Image'
            - $ref: '#/components/schemas/File'
    Properties:
      type: object
      description: Значения пользовательских свойств элемента
      properties:
        PROPERTY_CODE_STRING:
          $ref: '#/components/schemas/PropertyValue'
        PROPERTY_CODE_ELEMENT:
          $ref: '#/components/schemas/PropertyElementValue'
        PROPERTY_CODE_LIST:
          $ref: '#/components/schemas/PropertyListValue'
        PROPERTY_CODE_DIRECTORY:
          $ref: '#/components/schemas/PropertyDirectoryValue'
        PROPERTY_CODE_FILE:
          oneOf:
            - $ref: '#/components/schemas/Image'
            - $ref: '#/components/schemas/File'
        PROPERTY_MULTIPLE:
          type: array
          description: Множественное свойство (массив значений)
          items:
            anyOf:
              - $ref: '#/components/schemas/Image'
              - $ref: '#/components/schemas/File'
              - $ref: '#/components/schemas/PropertyValue'
              - $ref: '#/components/schemas/PropertyElementValue'
              - $ref: '#/components/schemas/PropertyListValue'
              - $ref: '#/components/schemas/PropertyDirectoryValue'

    IblockElementsResponse:
      type: object
      properties:
        status:
          type: string
          default: success
        data:
          type: object
          properties:
            pagination:
              $ref: '#/components/schemas/Pagination'
            items:
              type: array
              items:
                $ref: '#/components/schemas/ElementShort'
    IblockSectionsResponse:
      type: object
      properties:
        status:
          type: string
          default: success
        data:
          type: object
          properties:
            pagination:
              $ref: '#/components/schemas/Pagination'
            items:
              type: array
              items:
                $ref: '#/components/schemas/SectionShort'
    IblockSectionResponse:
      type: object
      properties:
        status:
          type: string
          default: success
        data:
          type: object
          properties:
            section:
              $ref: '#/components/schemas/Section'
            meta:
              $ref: '#/components/schemas/Meta'
    IblockElementResponse:
      type: object
      properties:
        status:
          type: string
          default: success
        data:
          type: object
          properties:
            element:
              $ref: '#/components/schemas/IblockElement'
            meta:
              $ref: '#/components/schemas/Meta'

    IblockElement:
      type: object
      properties:
        id:
          type: integer
          description: Уникальный идентификатор
        code:
          type: string
          description: Символьный код
        xml_id:
          type: string
          description: Внешний ID
        name:
          type: string
          description: Название
        active:
          type: boolean
          description: Флаг активности
        date_create:
          type: string
          format: date-time
          description: Дата создания
        date_update:
          type: string
          format: date-time
          description: Дата обновления
        active_from:
          type: string
          format: date-time
          description: Дата начала активности
        active_to:
          type: string
          format: date-time
          description: Дата окончания активности
        sort:
          type: integer
          description: Порядок сортировки
        preview_text:
          $ref: '#/components/schemas/Text'
        detail_text:
          $ref: '#/components/schemas/Text'
        preview_picture:
          $ref: '#/components/schemas/Image'
        detail_picture:
          $ref: '#/components/schemas/Image'
        section:
          $ref: '#/components/schemas/SectionShort'
        created_by:
          $ref: '#/components/schemas/User'
        modified_by:
          $ref: '#/components/schemas/User'
        tags:
          type: string
          description: Теги элемента
        properties:
          $ref: '#/components/schemas/Properties'
    ElementShort:
      type: object
      properties:
        id:
          type: integer
          description: Уникальный идентификатор элемента
        code:
          type: string
          description: Код элемента
        name:
          type: string
          description: Название элемента
        active:
          type: boolean
          description: Флаг активности элемента
        date_create:
          type: string
          format: date-time
          description: Дата создания элемента
        sort:
          type: integer
          description: Порядок сортировки элемента
        preview_text:
          $ref: '#/components/schemas/Text'
        detail_text:
          $ref: '#/components/schemas/Text'
        section:
          $ref: '#/components/schemas/SectionShort'
        tags:
          type: string
          description: Теги элемента
        properties:
          $ref: '#/components/schemas/Properties'
    SectionShort:
      type: object
      properties:
        id:
          type: integer
          description: ID
        xml_id:
          type: string
          description: Внешний ID
        name:
          type: string
          description: Название
        code:
          type: string
          description: Символьный код
        active:
          type: boolean
          description: Признак активности
        sort:
          type: integer
          description: Параметр сортировки
        parent_id:
          type: integer
          description: ID родителя
        picture:
          $ref: '#/components/schemas/Image'
    Section:
      type: object
      properties:
        id:
          type: integer
          description: ID
        xml_id:
          type: string
          description: Внешний ID
        name:
          type: string
          description: Название
        description:
          $ref: '#/components/schemas/Text'
        code:
          type: string
          description: Символьный код
        active:
          type: boolean
          description: Признак активности
        sort:
          type: integer
          description: Параметр сортировки
        parent_id:
          type: integer
          description: ID родителя
        date_create:
          type: string
          description: Дата создания
        date_update:
          type: string
          description: Дата обновления
        picture:
          $ref: '#/components/schemas/Image'
        detail_picture:
          $ref: '#/components/schemas/Image'
        created_by:
          $ref: '#/components/schemas/User'
        modified_by:
          $ref: '#/components/schemas/User'